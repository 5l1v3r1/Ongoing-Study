cmake_minimum_required(VERSION 3.9)

project(person_example C)

find_package(nanopb CONFIG REQUIRED)

set(CMAKE_INCLUDE_CURRENT_DIR TRUE)

# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F
if(MSVC AND protobuf_MSVC_STATIC_RUNTIME)
  foreach(flag_var
      CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
      CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
    if(${flag_var} MATCHES "/MD")
      string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
    endif(${flag_var} MATCHES "/MD")
  endforeach()
endif()

add_executable(person_c
    ${CMAKE_CURRENT_LIST_DIR}/person.c
    # These two files are generated by nanopb's protocol compiler.
    # First, install protobuf python package:
    #     cd protobuf/python
    #     python setup.py build
    #     python setup.py install
    # Then, run:
    # protoc --plugin=protoc-gen-nanopb=protoc-gen-nanopb.bat --nanopb_out=. person.proto
    ${CMAKE_CURRENT_LIST_DIR}/person.pb.h
    ${CMAKE_CURRENT_LIST_DIR}/person.pb.c
)

if (TARGET nanopb::protobuf-nanopb)
    target_link_libraries(person_c PRIVATE nanopb::protobuf-nanopb)
elseif (TARGET nanopb::protobuf-nanopb-static)
    target_link_libraries(person_c PRIVATE nanopb::protobuf-nanopb-static)
endif ()

# References:
# https://github.com/nanopb/nanopb
