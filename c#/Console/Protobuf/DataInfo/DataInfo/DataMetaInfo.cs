// https://protogen.marcgravell.com/

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: DataMetaInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DataModel
{

    /// <summary>Holder for reflection information generated from my.proto</summary>
    public static partial class MyReflection
    {

        #region Descriptor
        /// <summary>File descriptor for my.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static MyReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "CghteS5wcm90bxIJZGF0YW1vZGVsImQKCkRldmljZUluZm8SEwoLZGV2aWNl",
                  "X25hbWUYASABKAkSEQoJZGV2aWNlX2lkGAIgASgJEhQKDG1hbnVmYWN0dXJl",
                  "chgDIAEoCRIYChBzb2Z0d2FyZV92ZXJzaW9uGAQgASgJIjwKB0pvYkluZm8S",
                  "DAoEbmFtZRgBIAEoCRISCgpkZXBhcnRtZW50GAIgASgJEg8KB2FkZHJlc3MY",
                  "AyABKAkigAMKClBlcnNvbkluZm8SCgoCaWQYASABKAkSDAoEbmFtZRgCIAEo",
                  "CRILCgNhZ2UYAyABKAUSLAoGZ2VuZGVyGAUgASgOMhwuZGF0YW1vZGVsLlBl",
                  "cnNvbkluZm8uR2VuZGVyEg4KBmhlaWdodBgGIAEoAhI1CgtoZWlnaHRfdW5p",
                  "dBgHIAEoDjIgLmRhdGFtb2RlbC5QZXJzb25JbmZvLkhlaWdodFVuaXQSDgoG",
                  "d2VpZ2h0GAggASgCEjUKC3dlaWdodF91bml0GAkgASgOMiAuZGF0YW1vZGVs",
                  "LlBlcnNvbkluZm8uV2VpZ2h0VW5pdBIPCgdhZGRyZXNzGAogASgJIi8KBkdl",
                  "bmRlchIPCgtVbnNwZWNpZmllZBAAEggKBE1hbGUQARIKCgZGZW1hbGUQAiIm",
                  "CgpIZWlnaHRVbml0Eg4KCkNlbnRpbWV0ZXIQABIICgRJbmNoEAEiJQoKV2Vp",
                  "Z2h0VW5pdBIMCghLaWxvZ3JhbRAAEgkKBVBvdW5kEAEilAMKDERhdGFNZXRh",
                  "SW5mbxIqCgtkZXZpY2VfaW5mbxgBIAEoCzIVLmRhdGFtb2RlbC5EZXZpY2VJ",
                  "bmZvEiQKCGpvYl9pbmZvGAIgASgLMhIuZGF0YW1vZGVsLkpvYkluZm8SKgoL",
                  "cGVyc29uX2luZm8YAyABKAsyFS5kYXRhbW9kZWwuUGVyc29uSW5mbxIQCghj",
                  "aGFubmVscxgEIAEoBRIVCg1zYW1wbGluZ19yYXRlGAUgASgCEjcKCmRhdGFf",
                  "d2lkdGgYBiABKA4yIS5kYXRhbW9kZWwuRGF0YU1ldGFJbmZvLkRhdGFXaWR0",
                  "aEgAEhsKEWN1c3RvbV9kYXRhX3dpZHRoGAcgASgFSAAicwoJRGF0YVdpZHRo",
                  "EhMKD0RhdGFXaWR0aEN1c3RvbRAAEhIKDkRhdGFXaWR0aDhCaXRzEAESEwoP",
                  "RGF0YVdpZHRoMTZCaXRzEAISEwoPRGF0YVdpZHRoMjRCaXRzEAMSEwoPRGF0",
                  "YVdpZHRoMzJCaXRzEARCEgoQZGF0YV93aWR0aF91bmlvbkIMqgIJRGF0YU1v",
                  "ZGVsYgZwcm90bzM="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DataModel.DeviceInfo), global::DataModel.DeviceInfo.Parser, new[]{ "DeviceName", "DeviceId", "Manufacturer", "SoftwareVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DataModel.JobInfo), global::DataModel.JobInfo.Parser, new[]{ "Name", "Department", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DataModel.PersonInfo), global::DataModel.PersonInfo.Parser, new[]{ "Id", "Name", "Age", "Gender", "Height", "HeightUnit", "Weight", "WeightUnit", "Address" }, null, new[]{ typeof(global::DataModel.PersonInfo.Types.Gender), typeof(global::DataModel.PersonInfo.Types.HeightUnit), typeof(global::DataModel.PersonInfo.Types.WeightUnit) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DataModel.DataMetaInfo), global::DataModel.DataMetaInfo.Parser, new[]{ "DeviceInfo", "JobInfo", "PersonInfo", "Channels", "SamplingRate", "DataWidth", "CustomDataWidth" }, new[]{ "DataWidthUnion" }, new[]{ typeof(global::DataModel.DataMetaInfo.Types.DataWidth) }, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class DeviceInfo : pb::IMessage<DeviceInfo>
    {
        private static readonly pb::MessageParser<DeviceInfo> _parser = new pb::MessageParser<DeviceInfo>(() => new DeviceInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeviceInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::DataModel.MyReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo(DeviceInfo other) : this()
        {
            deviceName_ = other.deviceName_;
            deviceId_ = other.deviceId_;
            manufacturer_ = other.manufacturer_;
            softwareVersion_ = other.softwareVersion_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo Clone()
        {
            return new DeviceInfo(this);
        }

        /// <summary>Field number for the "device_name" field.</summary>
        public const int DeviceNameFieldNumber = 1;
        private string deviceName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceName
        {
            get { return deviceName_; }
            set
            {
                deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "device_id" field.</summary>
        public const int DeviceIdFieldNumber = 2;
        private string deviceId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceId
        {
            get { return deviceId_; }
            set
            {
                deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "manufacturer" field.</summary>
        public const int ManufacturerFieldNumber = 3;
        private string manufacturer_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Manufacturer
        {
            get { return manufacturer_; }
            set
            {
                manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "software_version" field.</summary>
        public const int SoftwareVersionFieldNumber = 4;
        private string softwareVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SoftwareVersion
        {
            get { return softwareVersion_; }
            set
            {
                softwareVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as DeviceInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeviceInfo other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (DeviceName != other.DeviceName) return false;
            if (DeviceId != other.DeviceId) return false;
            if (Manufacturer != other.Manufacturer) return false;
            if (SoftwareVersion != other.SoftwareVersion) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
            if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
            if (Manufacturer.Length != 0) hash ^= Manufacturer.GetHashCode();
            if (SoftwareVersion.Length != 0) hash ^= SoftwareVersion.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (DeviceName.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(DeviceName);
            }
            if (DeviceId.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(DeviceId);
            }
            if (Manufacturer.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Manufacturer);
            }
            if (SoftwareVersion.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(SoftwareVersion);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (DeviceName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
            }
            if (DeviceId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
            }
            if (Manufacturer.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
            }
            if (SoftwareVersion.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SoftwareVersion);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeviceInfo other)
        {
            if (other == null)
            {
                return;
            }
            if (other.DeviceName.Length != 0)
            {
                DeviceName = other.DeviceName;
            }
            if (other.DeviceId.Length != 0)
            {
                DeviceId = other.DeviceId;
            }
            if (other.Manufacturer.Length != 0)
            {
                Manufacturer = other.Manufacturer;
            }
            if (other.SoftwareVersion.Length != 0)
            {
                SoftwareVersion = other.SoftwareVersion;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            DeviceName = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            DeviceId = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Manufacturer = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            SoftwareVersion = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class JobInfo : pb::IMessage<JobInfo>
    {
        private static readonly pb::MessageParser<JobInfo> _parser = new pb::MessageParser<JobInfo>(() => new JobInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<JobInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::DataModel.MyReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public JobInfo()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public JobInfo(JobInfo other) : this()
        {
            name_ = other.name_;
            department_ = other.department_;
            address_ = other.address_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public JobInfo Clone()
        {
            return new JobInfo(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "department" field.</summary>
        public const int DepartmentFieldNumber = 2;
        private string department_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Department
        {
            get { return department_; }
            set
            {
                department_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 3;
        private string address_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Address
        {
            get { return address_; }
            set
            {
                address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as JobInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(JobInfo other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Name != other.Name) return false;
            if (Department != other.Department) return false;
            if (Address != other.Address) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (Department.Length != 0) hash ^= Department.GetHashCode();
            if (Address.Length != 0) hash ^= Address.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Name.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Name);
            }
            if (Department.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Department);
            }
            if (Address.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Address);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (Department.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Department);
            }
            if (Address.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(JobInfo other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            if (other.Department.Length != 0)
            {
                Department = other.Department;
            }
            if (other.Address.Length != 0)
            {
                Address = other.Address;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Department = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Address = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class PersonInfo : pb::IMessage<PersonInfo>
    {
        private static readonly pb::MessageParser<PersonInfo> _parser = new pb::MessageParser<PersonInfo>(() => new PersonInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PersonInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::DataModel.MyReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PersonInfo()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PersonInfo(PersonInfo other) : this()
        {
            id_ = other.id_;
            name_ = other.name_;
            age_ = other.age_;
            gender_ = other.gender_;
            height_ = other.height_;
            heightUnit_ = other.heightUnit_;
            weight_ = other.weight_;
            weightUnit_ = other.weightUnit_;
            address_ = other.address_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PersonInfo Clone()
        {
            return new PersonInfo(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "age" field.</summary>
        public const int AgeFieldNumber = 3;
        private int age_;
        /// <summary>
        ///Timestamp date_of_birth = 4;
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Age
        {
            get { return age_; }
            set
            {
                age_ = value;
            }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 5;
        private global::DataModel.PersonInfo.Types.Gender gender_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DataModel.PersonInfo.Types.Gender Gender
        {
            get { return gender_; }
            set
            {
                gender_ = value;
            }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 6;
        private float height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Height
        {
            get { return height_; }
            set
            {
                height_ = value;
            }
        }

        /// <summary>Field number for the "height_unit" field.</summary>
        public const int HeightUnitFieldNumber = 7;
        private global::DataModel.PersonInfo.Types.HeightUnit heightUnit_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DataModel.PersonInfo.Types.HeightUnit HeightUnit
        {
            get { return heightUnit_; }
            set
            {
                heightUnit_ = value;
            }
        }

        /// <summary>Field number for the "weight" field.</summary>
        public const int WeightFieldNumber = 8;
        private float weight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Weight
        {
            get { return weight_; }
            set
            {
                weight_ = value;
            }
        }

        /// <summary>Field number for the "weight_unit" field.</summary>
        public const int WeightUnitFieldNumber = 9;
        private global::DataModel.PersonInfo.Types.WeightUnit weightUnit_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DataModel.PersonInfo.Types.WeightUnit WeightUnit
        {
            get { return weightUnit_; }
            set
            {
                weightUnit_ = value;
            }
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 10;
        private string address_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Address
        {
            get { return address_; }
            set
            {
                address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as PersonInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PersonInfo other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (Name != other.Name) return false;
            if (Age != other.Age) return false;
            if (Gender != other.Gender) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
            if (HeightUnit != other.HeightUnit) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Weight, other.Weight)) return false;
            if (WeightUnit != other.WeightUnit) return false;
            if (Address != other.Address) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (Age != 0) hash ^= Age.GetHashCode();
            if (Gender != 0) hash ^= Gender.GetHashCode();
            if (Height != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
            if (HeightUnit != 0) hash ^= HeightUnit.GetHashCode();
            if (Weight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Weight);
            if (WeightUnit != 0) hash ^= WeightUnit.GetHashCode();
            if (Address.Length != 0) hash ^= Address.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
            if (Name.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Name);
            }
            if (Age != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(Age);
            }
            if (Gender != 0)
            {
                output.WriteRawTag(40);
                output.WriteEnum((int)Gender);
            }
            if (Height != 0F)
            {
                output.WriteRawTag(53);
                output.WriteFloat(Height);
            }
            if (HeightUnit != 0)
            {
                output.WriteRawTag(56);
                output.WriteEnum((int)HeightUnit);
            }
            if (Weight != 0F)
            {
                output.WriteRawTag(69);
                output.WriteFloat(Weight);
            }
            if (WeightUnit != 0)
            {
                output.WriteRawTag(72);
                output.WriteEnum((int)WeightUnit);
            }
            if (Address.Length != 0)
            {
                output.WriteRawTag(82);
                output.WriteString(Address);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (Age != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
            }
            if (Gender != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Gender);
            }
            if (Height != 0F)
            {
                size += 1 + 4;
            }
            if (HeightUnit != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)HeightUnit);
            }
            if (Weight != 0F)
            {
                size += 1 + 4;
            }
            if (WeightUnit != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)WeightUnit);
            }
            if (Address.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PersonInfo other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            if (other.Age != 0)
            {
                Age = other.Age;
            }
            if (other.Gender != 0)
            {
                Gender = other.Gender;
            }
            if (other.Height != 0F)
            {
                Height = other.Height;
            }
            if (other.HeightUnit != 0)
            {
                HeightUnit = other.HeightUnit;
            }
            if (other.Weight != 0F)
            {
                Weight = other.Weight;
            }
            if (other.WeightUnit != 0)
            {
                WeightUnit = other.WeightUnit;
            }
            if (other.Address.Length != 0)
            {
                Address = other.Address;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Id = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 24:
                        {
                            Age = input.ReadInt32();
                            break;
                        }
                    case 40:
                        {
                            gender_ = (global::DataModel.PersonInfo.Types.Gender)input.ReadEnum();
                            break;
                        }
                    case 53:
                        {
                            Height = input.ReadFloat();
                            break;
                        }
                    case 56:
                        {
                            heightUnit_ = (global::DataModel.PersonInfo.Types.HeightUnit)input.ReadEnum();
                            break;
                        }
                    case 69:
                        {
                            Weight = input.ReadFloat();
                            break;
                        }
                    case 72:
                        {
                            weightUnit_ = (global::DataModel.PersonInfo.Types.WeightUnit)input.ReadEnum();
                            break;
                        }
                    case 82:
                        {
                            Address = input.ReadString();
                            break;
                        }
                }
            }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the PersonInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Gender
            {
                [pbr::OriginalName("Unspecified")] Unspecified = 0,
                [pbr::OriginalName("Male")] Male = 1,
                [pbr::OriginalName("Female")] Female = 2,
            }

            public enum HeightUnit
            {
                [pbr::OriginalName("Centimeter")] Centimeter = 0,
                [pbr::OriginalName("Inch")] Inch = 1,
            }

            public enum WeightUnit
            {
                [pbr::OriginalName("Kilogram")] Kilogram = 0,
                [pbr::OriginalName("Pound")] Pound = 1,
            }

        }
        #endregion

    }

    public sealed partial class DataMetaInfo : pb::IMessage<DataMetaInfo>
    {
        private static readonly pb::MessageParser<DataMetaInfo> _parser = new pb::MessageParser<DataMetaInfo>(() => new DataMetaInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DataMetaInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::DataModel.MyReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataMetaInfo()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataMetaInfo(DataMetaInfo other) : this()
        {
            deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
            jobInfo_ = other.jobInfo_ != null ? other.jobInfo_.Clone() : null;
            personInfo_ = other.personInfo_ != null ? other.personInfo_.Clone() : null;
            channels_ = other.channels_;
            samplingRate_ = other.samplingRate_;
            switch (other.DataWidthUnionCase)
            {
                case DataWidthUnionOneofCase.DataWidth:
                    DataWidth = other.DataWidth;
                    break;
                case DataWidthUnionOneofCase.CustomDataWidth:
                    CustomDataWidth = other.CustomDataWidth;
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataMetaInfo Clone()
        {
            return new DataMetaInfo(this);
        }

        /// <summary>Field number for the "device_info" field.</summary>
        public const int DeviceInfoFieldNumber = 1;
        private global::DataModel.DeviceInfo deviceInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DataModel.DeviceInfo DeviceInfo
        {
            get { return deviceInfo_; }
            set
            {
                deviceInfo_ = value;
            }
        }

        /// <summary>Field number for the "job_info" field.</summary>
        public const int JobInfoFieldNumber = 2;
        private global::DataModel.JobInfo jobInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DataModel.JobInfo JobInfo
        {
            get { return jobInfo_; }
            set
            {
                jobInfo_ = value;
            }
        }

        /// <summary>Field number for the "person_info" field.</summary>
        public const int PersonInfoFieldNumber = 3;
        private global::DataModel.PersonInfo personInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DataModel.PersonInfo PersonInfo
        {
            get { return personInfo_; }
            set
            {
                personInfo_ = value;
            }
        }

        /// <summary>Field number for the "channels" field.</summary>
        public const int ChannelsFieldNumber = 4;
        private int channels_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Channels
        {
            get { return channels_; }
            set
            {
                channels_ = value;
            }
        }

        /// <summary>Field number for the "sampling_rate" field.</summary>
        public const int SamplingRateFieldNumber = 5;
        private float samplingRate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float SamplingRate
        {
            get { return samplingRate_; }
            set
            {
                samplingRate_ = value;
            }
        }

        /// <summary>Field number for the "data_width" field.</summary>
        public const int DataWidthFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DataModel.DataMetaInfo.Types.DataWidth DataWidth
        {
            get { return dataWidthUnionCase_ == DataWidthUnionOneofCase.DataWidth ? (global::DataModel.DataMetaInfo.Types.DataWidth)dataWidthUnion_ : 0; }
            set
            {
                dataWidthUnion_ = value;
                dataWidthUnionCase_ = DataWidthUnionOneofCase.DataWidth;
            }
        }

        /// <summary>Field number for the "custom_data_width" field.</summary>
        public const int CustomDataWidthFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CustomDataWidth
        {
            get { return dataWidthUnionCase_ == DataWidthUnionOneofCase.CustomDataWidth ? (int)dataWidthUnion_ : 0; }
            set
            {
                dataWidthUnion_ = value;
                dataWidthUnionCase_ = DataWidthUnionOneofCase.CustomDataWidth;
            }
        }

        private object dataWidthUnion_;
        /// <summary>Enum of possible cases for the "data_width_union" oneof.</summary>
        public enum DataWidthUnionOneofCase
        {
            None = 0,
            DataWidth = 6,
            CustomDataWidth = 7,
        }
        private DataWidthUnionOneofCase dataWidthUnionCase_ = DataWidthUnionOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataWidthUnionOneofCase DataWidthUnionCase
        {
            get { return dataWidthUnionCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDataWidthUnion()
        {
            dataWidthUnionCase_ = DataWidthUnionOneofCase.None;
            dataWidthUnion_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as DataMetaInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DataMetaInfo other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
            if (!object.Equals(JobInfo, other.JobInfo)) return false;
            if (!object.Equals(PersonInfo, other.PersonInfo)) return false;
            if (Channels != other.Channels) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SamplingRate, other.SamplingRate)) return false;
            if (DataWidth != other.DataWidth) return false;
            if (CustomDataWidth != other.CustomDataWidth) return false;
            if (DataWidthUnionCase != other.DataWidthUnionCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
            if (jobInfo_ != null) hash ^= JobInfo.GetHashCode();
            if (personInfo_ != null) hash ^= PersonInfo.GetHashCode();
            if (Channels != 0) hash ^= Channels.GetHashCode();
            if (SamplingRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SamplingRate);
            if (dataWidthUnionCase_ == DataWidthUnionOneofCase.DataWidth) hash ^= DataWidth.GetHashCode();
            if (dataWidthUnionCase_ == DataWidthUnionOneofCase.CustomDataWidth) hash ^= CustomDataWidth.GetHashCode();
            hash ^= (int)dataWidthUnionCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (deviceInfo_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(DeviceInfo);
            }
            if (jobInfo_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(JobInfo);
            }
            if (personInfo_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(PersonInfo);
            }
            if (Channels != 0)
            {
                output.WriteRawTag(32);
                output.WriteInt32(Channels);
            }
            if (SamplingRate != 0F)
            {
                output.WriteRawTag(45);
                output.WriteFloat(SamplingRate);
            }
            if (dataWidthUnionCase_ == DataWidthUnionOneofCase.DataWidth)
            {
                output.WriteRawTag(48);
                output.WriteEnum((int)DataWidth);
            }
            if (dataWidthUnionCase_ == DataWidthUnionOneofCase.CustomDataWidth)
            {
                output.WriteRawTag(56);
                output.WriteInt32(CustomDataWidth);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (deviceInfo_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
            }
            if (jobInfo_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobInfo);
            }
            if (personInfo_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(PersonInfo);
            }
            if (Channels != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channels);
            }
            if (SamplingRate != 0F)
            {
                size += 1 + 4;
            }
            if (dataWidthUnionCase_ == DataWidthUnionOneofCase.DataWidth)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)DataWidth);
            }
            if (dataWidthUnionCase_ == DataWidthUnionOneofCase.CustomDataWidth)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(CustomDataWidth);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DataMetaInfo other)
        {
            if (other == null)
            {
                return;
            }
            if (other.deviceInfo_ != null)
            {
                if (deviceInfo_ == null)
                {
                    deviceInfo_ = new global::DataModel.DeviceInfo();
                }
                DeviceInfo.MergeFrom(other.DeviceInfo);
            }
            if (other.jobInfo_ != null)
            {
                if (jobInfo_ == null)
                {
                    jobInfo_ = new global::DataModel.JobInfo();
                }
                JobInfo.MergeFrom(other.JobInfo);
            }
            if (other.personInfo_ != null)
            {
                if (personInfo_ == null)
                {
                    personInfo_ = new global::DataModel.PersonInfo();
                }
                PersonInfo.MergeFrom(other.PersonInfo);
            }
            if (other.Channels != 0)
            {
                Channels = other.Channels;
            }
            if (other.SamplingRate != 0F)
            {
                SamplingRate = other.SamplingRate;
            }
            switch (other.DataWidthUnionCase)
            {
                case DataWidthUnionOneofCase.DataWidth:
                    DataWidth = other.DataWidth;
                    break;
                case DataWidthUnionOneofCase.CustomDataWidth:
                    CustomDataWidth = other.CustomDataWidth;
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (deviceInfo_ == null)
                            {
                                deviceInfo_ = new global::DataModel.DeviceInfo();
                            }
                            input.ReadMessage(deviceInfo_);
                            break;
                        }
                    case 18:
                        {
                            if (jobInfo_ == null)
                            {
                                jobInfo_ = new global::DataModel.JobInfo();
                            }
                            input.ReadMessage(jobInfo_);
                            break;
                        }
                    case 26:
                        {
                            if (personInfo_ == null)
                            {
                                personInfo_ = new global::DataModel.PersonInfo();
                            }
                            input.ReadMessage(personInfo_);
                            break;
                        }
                    case 32:
                        {
                            Channels = input.ReadInt32();
                            break;
                        }
                    case 45:
                        {
                            SamplingRate = input.ReadFloat();
                            break;
                        }
                    case 48:
                        {
                            dataWidthUnion_ = input.ReadEnum();
                            dataWidthUnionCase_ = DataWidthUnionOneofCase.DataWidth;
                            break;
                        }
                    case 56:
                        {
                            CustomDataWidth = input.ReadInt32();
                            break;
                        }
                }
            }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the DataMetaInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum DataWidth
            {
                [pbr::OriginalName("DataWidthCustom")] Custom = 0,
                [pbr::OriginalName("DataWidth8Bits")] _8Bits = 1,
                [pbr::OriginalName("DataWidth16Bits")] _16Bits = 2,
                [pbr::OriginalName("DataWidth24Bits")] _24Bits = 3,
                [pbr::OriginalName("DataWidth32Bits")] _32Bits = 4,
            }

        }
        #endregion

    }

    #endregion

}

#endregion Designer generated code
